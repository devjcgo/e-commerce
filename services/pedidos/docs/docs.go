// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pedidos": {
            "get": {
                "description": "Retorna pedidos e seus itens.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Lista todos pedidos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ecommerce_pedidos_internal_domain.Pedido"
                            }
                        }
                    },
                    "404": {
                        "description": "Sem pedidos na base",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno ao listar pedidos",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo pedido com base nos dados do cliente e itens fornecidos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Cria um novo pedido",
                "parameters": [
                    {
                        "description": "Dados para criação do pedido",
                        "name": "pedido",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_infra_http.createRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Corpo da requisição inválido",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno ao criar pedido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pedidos/{id}": {
            "get": {
                "description": "Retorna os detalhes de um pedido específico com base no seu UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Busca um pedido por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do Pedido (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ecommerce_pedidos_internal_domain.Pedido"
                        }
                    },
                    "400": {
                        "description": "O ID do pedido é obrigatório",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Pedido não encontrado",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erro interno ao buscar pedido",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ecommerce_pedidos_internal_application.ItensInput": {
            "type": "object",
            "properties": {
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number"
                },
                "produto_id": {
                    "type": "string"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "ecommerce_pedidos_internal_domain.Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "preco": {
                    "type": "number",
                    "format": "float64"
                },
                "produtoID": {
                    "type": "string"
                },
                "quantidade": {
                    "type": "integer"
                }
            }
        },
        "ecommerce_pedidos_internal_domain.Pedido": {
            "type": "object",
            "properties": {
                "atualizadoEm": {
                    "type": "string"
                },
                "clienteID": {
                    "type": "string"
                },
                "criadoEm": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ecommerce_pedidos_internal_domain.Item"
                    }
                },
                "status": {
                    "$ref": "#/definitions/ecommerce_pedidos_internal_domain.Status"
                },
                "total": {
                    "type": "number",
                    "format": "float64"
                }
            }
        },
        "ecommerce_pedidos_internal_domain.Status": {
            "type": "string",
            "enum": [
                "aguardando_pagamento",
                "pago",
                "enviado",
                "cancelado"
            ],
            "x-enum-varnames": [
                "StatusAguardandoPagamento",
                "StatusPago",
                "StatusEnviado",
                "StatusCancelado"
            ]
        },
        "internal_infra_http.createRequestBody": {
            "type": "object",
            "properties": {
                "cliente_id": {
                    "type": "string"
                },
                "itens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ecommerce_pedidos_internal_application.ItensInput"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/pedidos",
	Schemes:          []string{},
	Title:            "API de Pedidos do E-commerce",
	Description:      "Este é o microsserviço responsável pelo gerenciamento de pedidos.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
